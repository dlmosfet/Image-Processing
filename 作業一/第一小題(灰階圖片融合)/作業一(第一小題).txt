#pragma once

namespace Project1 {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;
	using namespace System::Drawing::Imaging;
	using namespace System::Drawing::Design;



	/// <summary>
	/// MyForm 的摘要
	/// </summary>
	public ref class MyForm : public System::Windows::Forms::Form
	{
	public:
		MyForm(void)
		{
			InitializeComponent();
			//
			//TODO:  在此加入建構函式程式碼
			//
		}

	protected:
		/// <summary>
		/// 清除任何使用中的資源。
		/// </summary>
		~MyForm()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::Button^  button1;
	protected:
	private: System::Windows::Forms::Button^  button2;
	private: System::Windows::Forms::PictureBox^  pictureBox1;
	private: System::Windows::Forms::PictureBox^  pictureBox2;

	private:
		/// <summary>
		/// 設計工具所需的變數。
		/// </summary>
		System::ComponentModel::Container ^components;

	private: System::Windows::Forms::PictureBox^  pictureBox4;
	private: System::Windows::Forms::PictureBox^  pictureBox5;
	private: System::Windows::Forms::Button^  button3;
	private: System::Windows::Forms::Button^  button4;


			 //定義於 Windows Form Designer generated code 之前
	private:
		//定義影像類別(點陣圖(.bmp)，無壓縮，資訊較多)
		Bitmap^ ori_image;
	private: System::Windows::Forms::PictureBox^  pictureBox3;
	private: System::Windows::Forms::Button^  button5;
	private:
		//定義影像類別(點陣圖(.bmp)，無壓縮，資訊較多)
		Bitmap^ ori_image2;
	private:
		//定義影像類別(點陣圖(.bmp)，無壓縮，資訊較多)
		Bitmap^ ori_image3;
	private:
		//定義影像類別(點陣圖(.bmp)，無壓縮，資訊較多)
		Bitmap^ ori_image4;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// 此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改
		/// 這個方法的內容。
		/// </summary>
		void InitializeComponent(void)
		{
			this->button1 = (gcnew System::Windows::Forms::Button());
			this->button2 = (gcnew System::Windows::Forms::Button());
			this->pictureBox1 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox2 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox4 = (gcnew System::Windows::Forms::PictureBox());
			this->pictureBox5 = (gcnew System::Windows::Forms::PictureBox());
			this->button3 = (gcnew System::Windows::Forms::Button());
			this->button4 = (gcnew System::Windows::Forms::Button());
			this->pictureBox3 = (gcnew System::Windows::Forms::PictureBox());
			this->button5 = (gcnew System::Windows::Forms::Button());
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox1))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox2))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox4))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox5))->BeginInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox3))->BeginInit();
			this->SuspendLayout();
			// 
			// button1
			// 
			this->button1->Location = System::Drawing::Point(74, 75);
			this->button1->Name = L"button1";
			this->button1->Size = System::Drawing::Size(158, 58);
			this->button1->TabIndex = 0;
			this->button1->Text = L"開檔";
			this->button1->UseVisualStyleBackColor = true;
			this->button1->Click += gcnew System::EventHandler(this, &MyForm::button1_Click);
			// 
			// button2
			// 
			this->button2->Location = System::Drawing::Point(469, 75);
			this->button2->Name = L"button2";
			this->button2->Size = System::Drawing::Size(158, 58);
			this->button2->TabIndex = 1;
			this->button2->Text = L"灰階";
			this->button2->UseVisualStyleBackColor = true;
			this->button2->Click += gcnew System::EventHandler(this, &MyForm::button2_Click);
			// 
			// pictureBox1
			// 
			this->pictureBox1->Location = System::Drawing::Point(74, 176);
			this->pictureBox1->Name = L"pictureBox1";
			this->pictureBox1->Size = System::Drawing::Size(206, 165);
			this->pictureBox1->SizeMode = System::Windows::Forms::PictureBoxSizeMode::Zoom;
			this->pictureBox1->TabIndex = 2;
			this->pictureBox1->TabStop = false;
			// 
			// pictureBox2
			// 
			this->pictureBox2->Location = System::Drawing::Point(330, 176);
			this->pictureBox2->Name = L"pictureBox2";
			this->pictureBox2->Size = System::Drawing::Size(217, 165);
			this->pictureBox2->SizeMode = System::Windows::Forms::PictureBoxSizeMode::Zoom;
			this->pictureBox2->TabIndex = 3;
			this->pictureBox2->TabStop = false;
			// 
			// pictureBox4
			// 
			this->pictureBox4->Location = System::Drawing::Point(330, 365);
			this->pictureBox4->Name = L"pictureBox4";
			this->pictureBox4->Size = System::Drawing::Size(217, 165);
			this->pictureBox4->SizeMode = System::Windows::Forms::PictureBoxSizeMode::Zoom;
			this->pictureBox4->TabIndex = 5;
			this->pictureBox4->TabStop = false;
			// 
			// pictureBox5
			// 
			this->pictureBox5->Location = System::Drawing::Point(640, 266);
			this->pictureBox5->Name = L"pictureBox5";
			this->pictureBox5->Size = System::Drawing::Size(206, 165);
			this->pictureBox5->SizeMode = System::Windows::Forms::PictureBoxSizeMode::Zoom;
			this->pictureBox5->TabIndex = 6;
			this->pictureBox5->TabStop = false;
			// 
			// button3
			// 
			this->button3->Location = System::Drawing::Point(261, 75);
			this->button3->Name = L"button3";
			this->button3->Size = System::Drawing::Size(158, 58);
			this->button3->TabIndex = 7;
			this->button3->Text = L"開檔2";
			this->button3->UseVisualStyleBackColor = true;
			this->button3->Click += gcnew System::EventHandler(this, &MyForm::button3_Click);
			// 
			// button4
			// 
			this->button4->Location = System::Drawing::Point(663, 75);
			this->button4->Name = L"button4";
			this->button4->Size = System::Drawing::Size(158, 58);
			this->button4->TabIndex = 8;
			this->button4->Text = L"灰階2";
			this->button4->UseVisualStyleBackColor = true;
			this->button4->Click += gcnew System::EventHandler(this, &MyForm::button4_Click);
			// 
			// pictureBox3
			// 
			this->pictureBox3->Location = System::Drawing::Point(63, 365);
			this->pictureBox3->Name = L"pictureBox3";
			this->pictureBox3->Size = System::Drawing::Size(217, 165);
			this->pictureBox3->SizeMode = System::Windows::Forms::PictureBoxSizeMode::Zoom;
			this->pictureBox3->TabIndex = 9;
			this->pictureBox3->TabStop = false;
			// 
			// button5
			// 
			this->button5->Location = System::Drawing::Point(845, 75);
			this->button5->Name = L"button5";
			this->button5->Size = System::Drawing::Size(158, 58);
			this->button5->TabIndex = 10;
			this->button5->Text = L"灰階3";
			this->button5->UseVisualStyleBackColor = true;
			this->button5->Click += gcnew System::EventHandler(this, &MyForm::button5_Click);
			// 
			// MyForm
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 12);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->ClientSize = System::Drawing::Size(1190, 603);
			this->Controls->Add(this->button5);
			this->Controls->Add(this->pictureBox3);
			this->Controls->Add(this->button4);
			this->Controls->Add(this->button3);
			this->Controls->Add(this->pictureBox5);
			this->Controls->Add(this->pictureBox4);
			this->Controls->Add(this->pictureBox2);
			this->Controls->Add(this->pictureBox1);
			this->Controls->Add(this->button2);
			this->Controls->Add(this->button1);
			this->Name = L"MyForm";
			this->Text = L"MyForm";
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox1))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox2))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox4))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox5))->EndInit();
			(cli::safe_cast<System::ComponentModel::ISupportInitialize^>(this->pictureBox3))->EndInit();
			this->ResumeLayout(false);

		}
#pragma endregion
	private: System::Void button1_Click(System::Object^  sender, System::EventArgs^  e) {//open file on pictureBox1
		//new一個新的openFileDialog1開啟檔案
		//開啟檔案對話窗 記得「^」
		OpenFileDialog^ ofd = gcnew OpenFileDialog();
		//預設檔案名稱為空值
		ofd->FileName = "";
		//設定Filter，用以限定使用者開啟的檔案
		ofd->Filter = "ALL Files(*.*)|*.*";
		// 設定Filter選擇模式(依照Filter數，如本例選擇1表示起始出現的為點陣圖，選擇2表示All filts)
		ofd->FilterIndex = 1;
		//跳出檔案選擇視窗(ShowDialog)，並且如果使用者點選檔案，並且檔案名稱超過0個字元，則判斷是為True，進入處理程序
		if (ofd->ShowDialog() == System::Windows::Forms::DialogResult::OK && ofd->FileName != "") {
			//將選取的檔案讀取並且存至ori_image
			ori_image = gcnew Bitmap(ofd->FileName);
			//將影像顯示在pictureBox1
			pictureBox1->Image = ori_image;
		}
	}
	private: System::Void button2_Click(System::Object^  sender, System::EventArgs^  e) {
		//if not open photo leave this process
		if (ori_image == nullptr) {
			return;
		}
		//建立輸出點陣圖
		Bitmap^ output = gcnew Bitmap(ori_image->Width, ori_image->Height, ori_image->PixelFormat);
		//BitmapData 需要加入namespace
		//lock Memory to edit it
		//在Memory建立靜態位址空間，讓該部分Memory空間不被占用
		BitmapData^ bd_ori = ori_image->LockBits(Rectangle(0, 0, ori_image->Width, ori_image->Height), ImageLockMode::ReadWrite, ori_image->PixelFormat);
		BitmapData^ bd_output = output->LockBits(Rectangle(0, 0, output->Width, output->Height), ImageLockMode::ReadWrite, output->PixelFormat);

		//因為BitmapData 提供像素指標和可能會產生一些不需要的圖片
		int ori_byteskip = bd_ori->Stride - bd_ori->Width * 3;
		int output_byteskip = bd_output->Stride - bd_output->Width * 3;

		//set pointer to start
		//設定影像初始指標位址，也就是影像的第一個像素
		Byte* ori_ptr = (Byte*)((void*)bd_ori->Scan0);
		Byte* output_ptr = (Byte*)((void*)bd_output->Scan0);

		//灰階演算法  
		for (int y = 0; y < bd_ori->Height; y++) {
			for (int x = 0; x < bd_ori->Width; x++) {
				//像素值填入
				int B = (int)ori_ptr[0];
				int G = (int)ori_ptr[1];
				int R = (int)ori_ptr[2];
				int gray = (R + G + B) / 3;

				output_ptr[0] = gray;
				output_ptr[1] = gray;
				output_ptr[2] = gray;

				// 跳到下個像素
				ori_ptr += 3;
				output_ptr += 3;

				// 補充 如果影像要指定到特定位置
				// ori_ptr += (y * bd_ori->Stride + x * 3);
			}
			//throw garbage
			ori_ptr += ori_byteskip;
			output_ptr += output_byteskip;
		}

		//Unlock處理完畢的像素範圍
		ori_image->UnlockBits(bd_ori);
		output->UnlockBits(bd_output);
		//將影像顯示在pictureBox2
		pictureBox2->Image = output;
	}
	private: System::Void button3_Click(System::Object^  sender, System::EventArgs^  e) {
		//new一個新的openFileDialog1開啟檔案
		//開啟檔案對話窗 記得「^」
		OpenFileDialog^ ofd = gcnew OpenFileDialog();
		//預設檔案名稱為空值
		ofd->FileName = "";
		//設定Filter，用以限定使用者開啟的檔案
		ofd->Filter = "ALL Files(*.*)|*.*";
		// 設定Filter選擇模式(依照Filter數，如本例選擇1表示起始出現的為點陣圖，選擇2表示All filts)
		ofd->FilterIndex = 1;
		//跳出檔案選擇視窗(ShowDialog)，並且如果使用者點選檔案，並且檔案名稱超過0個字元，則判斷是為True，進入處理程序
		if (ofd->ShowDialog() == System::Windows::Forms::DialogResult::OK && ofd->FileName != "") {
			//將選取的檔案讀取並且存至ori_image
			ori_image2 = gcnew Bitmap(ofd->FileName);
			//將影像顯示在pictureBox1
			pictureBox3->Image = ori_image2;
		}
	}
	private: System::Void button4_Click(System::Object^  sender, System::EventArgs^  e) {
		//if not open photo leave this process
		if (ori_image2 == nullptr) {
			return;
		}
		//建立輸出點陣圖
		Bitmap^ output1 = gcnew Bitmap(ori_image2->Width, ori_image2->Height, ori_image2->PixelFormat);
		//BitmapData 需要加入namespace
		//lock Memory to edit it
		//在Memory建立靜態位址空間，讓該部分Memory空間不被占用
		BitmapData^ bd_ori = ori_image2->LockBits(Rectangle(0, 0, ori_image2->Width, ori_image2->Height), ImageLockMode::ReadWrite, ori_image2->PixelFormat);
		BitmapData^ bd_output = output1->LockBits(Rectangle(0, 0, output1->Width, output1->Height), ImageLockMode::ReadWrite, output1->PixelFormat);

		//因為BitmapData 提供像素指標和可能會產生一些不需要的圖片
		int ori_byteskip = bd_ori->Stride - bd_ori->Width * 3;
		int output_byteskip = bd_output->Stride - bd_output->Width * 3;

		//set pointer to start
		//設定影像初始指標位址，也就是影像的第一個像素
		Byte* ori_ptr = (Byte*)((void*)bd_ori->Scan0);
		Byte* output_ptr = (Byte*)((void*)bd_output->Scan0);

		//灰階演算法  
		for (int y = 0; y < bd_ori->Height; y++) {
			for (int x = 0; x < bd_ori->Width; x++) {
				//像素值填入
				int B = (int)ori_ptr[0];
				int G = (int)ori_ptr[1];
				int R = (int)ori_ptr[2];
				int gray = (R + G + B) / 3;

				output_ptr[0] = gray;
				output_ptr[1] = gray;
				output_ptr[2] = gray;

				// 跳到下個像素
				ori_ptr += 3;
				output_ptr += 3;

				// 補充 如果影像要指定到特定位置
				// ori_ptr += (y * bd_ori->Stride + x * 3);
			}
			//throw garbage
			ori_ptr += ori_byteskip;
			output_ptr += output_byteskip;
		}

		//Unlock處理完畢的像素範圍
		ori_image2->UnlockBits(bd_ori);
		output1->UnlockBits(bd_output);
		//將影像顯示在pictureBox2
		pictureBox4->Image = output1;
	}
	private: System::Void button5_Click(System::Object^  sender, System::EventArgs^  e) {
		Bitmap^ output2 = gcnew Bitmap(ori_image->Width, ori_image->Height, ori_image->PixelFormat);
		BitmapData^ bd_ori = ori_image->LockBits(Rectangle(0, 0, ori_image->Width, ori_image->Height), ImageLockMode::ReadWrite, ori_image->PixelFormat);
		BitmapData^ bd_ori1 = ori_image2->LockBits(Rectangle(0, 0, ori_image2->Width, ori_image2->Height), ImageLockMode::ReadWrite, ori_image2->PixelFormat);
		BitmapData^ bd_output = output2->LockBits(Rectangle(0, 0, output2->Width, output2->Height), ImageLockMode::ReadWrite, output2->PixelFormat);


		//因為BitmapData 提供像素指標和可能會產生一些不需要的圖片
		int ori_byteskip = bd_ori->Stride - bd_ori->Width * 3;
		int output_byteskip = bd_output->Stride - bd_output->Width * 3;

		//set pointer to start
		//設定影像初始指標位址，也就是影像的第一個像素
		Byte* ori_ptr1 = (Byte*)((void*)bd_ori->Scan0);
		Byte* output_ptr1 = (Byte*)((void*)bd_output->Scan0);
		Byte* ori_ptr11 = (Byte*)((void*)bd_ori1->Scan0);

		for (int y = 0; y < bd_ori->Height; y++) {
			for (int x = 0; x < bd_ori->Width; x++) {
				//像素值填入
				int B = (int)ori_ptr1[0];
				int G = (int)ori_ptr1[1];
				int R = (int)ori_ptr1[2];
				int B1 = (int)ori_ptr11[0];
				int G1 = (int)ori_ptr11[1];
				int R1 = (int)ori_ptr11[2];
				int gray = (R + G + B)/3;
				int gray1 = (R1 + G1 + B1)/3;

				output_ptr1[0] = 0.1*gray + 0.9*gray1;
				output_ptr1[1] = 0.1*gray + 0.9*gray1;
				output_ptr1[2] = 0.1*gray + 0.9*gray1;

				// 跳到下個像素
				ori_ptr1 += 3;
				ori_ptr11 += 3;
				output_ptr1 += 3;

				// 補充 如果影像要指定到特定位置
				// ori_ptr += (y * bd_ori->Stride + x * 3);
			}
			//throw garbage
			ori_ptr1 += ori_byteskip;
			ori_ptr11 += ori_byteskip;
			output_ptr1 += output_byteskip;
		}

		//Unlock處理完畢的像素範圍
		ori_image->UnlockBits(bd_ori);
		output2->UnlockBits(bd_output);
		//將影像顯示在pictureBox2
		pictureBox5->Image = output2;
	}
		
	};
	};
